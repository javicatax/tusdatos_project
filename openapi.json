{
  "openapi": "3.1.0",
  "info": {
    "title": "TusDatos.co",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/auth/auth": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Auth",
        "description": "Function to authenticate the user\n:param data:\n:return: access token",
        "operationId": "auth_api_v1_auth_auth_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_auth_api_v1_auth_auth_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User Endpoint",
        "description": "Create a new user\n:param user:\n:param db:\n:return: User response",
        "operationId": "create_user_endpoint_api_v1_users_users_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Login",
        "description": "Login a user\n:param credentials:\n:param db:\n:return: access token",
        "operationId": "login_api_v1_users_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HTTPBasicCredentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Login Api V1 Users Login Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Create Event Endpoint",
        "description": "Create an event endpoint.\n:param event:\n:param db:\n:return: Event created",
        "operationId": "create_event_endpoint_api_v1_events_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Events",
        "description": "Get all events\n:param db:\n:return: List of events",
        "operationId": "get_events_api_v1_events_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventResponseModel"
                  },
                  "title": "Response Get Events Api V1 Events Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{event_id}/attendees/": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Add Attendees Endpoint",
        "description": "Add attendees endpoint.\n:param event_id:\n:param attendees:\n:param db:\n:return: Event updated",
        "operationId": "add_attendees_endpoint_api_v1_events__event_id__attendees__post",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttendeeRequestModel"
                },
                "title": "Attendees"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{event_id}": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Event",
        "description": "Get an event.\n:param event_id:\n:param db:\n:return: Event",
        "operationId": "get_event_api_v1_events__event_id__get",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "events"
        ],
        "summary": "Update Event Endpoint",
        "description": "Update an event.\n:param event_id:\n:param event_update:\n:param db:\n:return: Event updated",
        "operationId": "update_event_endpoint_api_v1_events__event_id__put",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventRequestPutModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "events"
        ],
        "summary": "Delete Event Endpoint",
        "description": "Delete an event.\n:param event_id:\n:param db:\n:return: Deleted event",
        "operationId": "delete_event_endpoint_api_v1_events__event_id__delete",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Event Endpoint Api V1 Events  Event Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions": {
      "post": {
        "tags": [
          "sessions"
        ],
        "summary": "Create Session Event Endpoint",
        "description": "Creates a new session event\n:param session_event:\n:param db:\n:return: Session event",
        "operationId": "create_session_event_endpoint_api_v1_sessions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionRequestModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_event_id}": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Get Event",
        "description": "Get a session event.\n:param session_event_id:\n:param db:\n:return: Session event",
        "operationId": "get_event_api_v1_sessions__session_event_id__get",
        "parameters": [
          {
            "name": "session_event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Index",
        "operationId": "index__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AttendeeRequestModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "AttendeeRequestModel",
        "description": "Attendee request model"
      },
      "AttendeeResponseModel": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "event_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "event_id"
        ],
        "title": "AttendeeResponseModel",
        "description": "Attendee response model"
      },
      "Body_auth_api_v1_auth_auth_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_auth_api_v1_auth_auth_post"
      },
      "EventCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Event name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "Event start date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date",
            "description": "Event end date"
          },
          "capacity_total": {
            "type": "integer",
            "title": "Capacity Total",
            "description": "Event capacity available"
          },
          "capacity_actual": {
            "type": "integer",
            "title": "Capacity Actual",
            "description": "Event capacity available"
          },
          "status": {
            "$ref": "#/components/schemas/EventStatus",
            "default": "planned"
          }
        },
        "type": "object",
        "required": [
          "name",
          "start_date",
          "end_date",
          "capacity_total",
          "capacity_actual"
        ],
        "title": "EventCreate",
        "description": "Event create schema"
      },
      "EventRequestPutModel": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Event description"
          },
          "capacity_total": {
            "type": "integer",
            "title": "Capacity Total"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Event status"
          }
        },
        "type": "object",
        "required": [
          "description",
          "capacity_total",
          "status"
        ],
        "title": "EventRequestPutModel",
        "description": "Event request schema"
      },
      "EventResponseModel": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Event name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Event description"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "capacity_total": {
            "type": "integer",
            "title": "Capacity Total",
            "description": "Event capacity available"
          },
          "capacity_actual": {
            "type": "integer",
            "title": "Capacity Actual",
            "description": "Event capacity available"
          },
          "status": {
            "$ref": "#/components/schemas/EventStatus"
          },
          "attendees": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttendeeResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attendees"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "start_date",
          "end_date",
          "capacity_total",
          "capacity_actual",
          "status",
          "attendees"
        ],
        "title": "EventResponseModel",
        "description": "Event response schema"
      },
      "EventStatus": {
        "type": "string",
        "enum": [
          "planned",
          "ongoing",
          "completed",
          "cancelled"
        ],
        "title": "EventStatus"
      },
      "HTTPBasicCredentials": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "HTTPBasicCredentials",
        "description": "The HTTP Basic credentials given as the result of using `HTTPBasic` in a\ndependency.\n\nRead more about it in the\n[FastAPI docs for HTTP Basic Auth](https://fastapi.tiangolo.com/advanced/security/http-basic-auth/)."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "SessionRequestModel": {
        "properties": {
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "nombre": {
            "type": "string",
            "title": "Nombre"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "presenter_id": {
            "type": "integer",
            "title": "Presenter Id"
          }
        },
        "type": "object",
        "required": [
          "event_id",
          "nombre",
          "start_date",
          "end_date",
          "presenter_id"
        ],
        "title": "SessionRequestModel",
        "description": "Session request model"
      },
      "SessionResponseModel": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "nombre": {
            "type": "string",
            "title": "Nombre"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "presenter_id": {
            "$ref": "#/components/schemas/SpeakerResponseModel"
          }
        },
        "type": "object",
        "required": [
          "id",
          "event_id",
          "nombre",
          "start_date",
          "end_date",
          "presenter_id"
        ],
        "title": "SessionResponseModel",
        "description": "Session response model"
      },
      "SpeakerResponseModel": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "nombre": {
            "type": "string",
            "title": "Nombre"
          },
          "biography": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Biography"
          },
          "sessions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Sessions"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nombre",
          "biography",
          "sessions"
        ],
        "title": "SpeakerResponseModel",
        "description": "Speaker response model"
      },
      "UserRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "description": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "UserRequest",
        "description": "User request model"
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username",
            "description": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "Password"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "password"
        ],
        "title": "UserResponse",
        "description": "User response model"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}